server {
	listen 443;
	server_name 192.168.10.3; 

	# Configure SSL
	ssl on;
	ssl_certificate /etc/nginx/certs/es.cert;
	ssl_certificate_key /etc/nginx/certs/es.key;

	# Logging
	access_log /db_test/nginx_logs/elasticsearch_access.log;
	error_log /db_test/nginx_logs/elasticsearch_error.log debug;

	# Allow Access To Specified URLs WITHOUT Authentication
	location / {
		# Allow Anonymous Access
		error_page 590 = @elasticsearch;

		# Require Authentication
		error_page 595 = @protected_elasticsearch;

		# Allow Anonymous Access If These Conditions Are Met

		set $ok 0;

		# If request is to server_name/
		if ($request_uri ~ ^/$) {
			set $ok "${ok}1";
		}
		# and method is PING
		if ($request_method = HEAD) {
			set $ok "${ok}2";
		}

		# Allow Anonymous Search
		if ($request_uri ~ ^/.*/_search) {
			return 590;
		}

		if ($ok = 012) {
			return 590;
		}

		# All Other Requests Require Authentication
		return 595;
	}

	# Non-Authenticated Access
	location @elasticsearch {
		proxy_pass http://localhost:9200;
		proxy_redirect http://localhost:9200 http://192.168.10.3/; # Insert Server Name Here
	}

	# Authenticated Access
	location @protected_elasticsearch {
		auth_basic "Government Publications Portal - Authenticated Access";
		auth_basic_user_file /etc/elasticsearch/user.pwd;

		proxy_pass http://localhost:9200;
		proxy_redirect http://localhost:9200 http://192.168.10.3; # Insert Server Name Here
	}
}

# Do Not Allow Access Via HTTP
server {
	listen 80;
	server_name 192.168.10.3; # Insert Server Name Here
	return 301 http://$host$request_uri;
}
